@model Project.Models.fine

@{
    ViewBag.Title = "Edit Fine";
}

<div class="max-w-4xl mx-auto bg-gradient-to-br from-gray-800 to-gray-900 text-gray-200 px-6 py-8 rounded-xl shadow-lg">
    <div class="mb-6">
        <a href="@Url.Action("Index")"
           class="bg-blue-600 hover:bg-gray-200 hover:text-blue-600 text-gray-200 font-bold py-3 px-4 rounded shadow transition duration-200">
            ← Back to List
        </a>
    </div>

    <h2 class="text-3xl font-bold mb-6 text-center">Edit Fine</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-red-400 mb-4 text-center" })
        @Html.HiddenFor(model => model.fine_id)

        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <!-- Fine Amount -->
            <div>
                @Html.LabelFor(model => model.fine_amount, "Fine Amount", htmlAttributes: new { @class = "text-lg font-medium" })
                @Html.EditorFor(model => model.fine_amount, new
                {
                    htmlAttributes = new
                    {
                        @class = "form-control mt-2 p-3 rounded-md border-none bg-gray-700 text-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 focus:bg-gray-600"
                    }
                })
                @Html.ValidationMessageFor(model => model.fine_amount, "", new { @class = "text-red-500 text-sm mt-1" })
            </div>

            <!-- Fine Due Timestamp -->
            <div>
                @Html.LabelFor(model => model.fine_due_timestamp, "Due Timestamp", htmlAttributes: new { @class = "text-lg font-medium" })
                @Html.EditorFor(model => model.fine_due_timestamp, new
                {
                    htmlAttributes = new
                    {
                        @class = "form-control mt-2 p-3 rounded-md border-none bg-gray-700 text-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 focus:bg-gray-600"
                    }
                })
                @Html.ValidationMessageFor(model => model.fine_due_timestamp, "", new { @class = "text-red-500 text-sm mt-1" })
            </div>

            <!-- Fine Status -->
            <div>
                @Html.LabelFor(model => model.fine_status, "Status", htmlAttributes: new { @class = "text-lg font-medium" })
                @Html.EditorFor(model => model.fine_status, new
                {
                    htmlAttributes = new
                    {
                        @class = "form-control mt-2 p-3 rounded-md border-none bg-gray-700 text-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 focus:bg-gray-600"
                    }
                })
                @Html.ValidationMessageFor(model => model.fine_status, "", new { @class = "text-red-500 text-sm mt-1" })
            </div>

            <!-- Borrowing Record -->
            <div>
                @Html.LabelFor(model => model.borrowing_id, "Borrowing Record", htmlAttributes: new { @class = "text-lg font-medium" })
                @Html.DropDownList("borrowing_id", null, htmlAttributes: new
                {
                    @class = "form-control mt-2 p-3 rounded-md border-none bg-gray-700 text-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 focus:bg-gray-600"
                })
                @Html.ValidationMessageFor(model => model.borrowing_id, "", new { @class = "text-red-500 text-sm mt-1" })
            </div>
        </div>

        <div class="mt-8 text-center">
            <input type="submit" value="Save"
                   class="w-full py-3 text-lg font-semibold rounded bg-blue-600 hover:bg-gray-200 hover:text-blue-600 text-gray-200 transition duration-200" />
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
